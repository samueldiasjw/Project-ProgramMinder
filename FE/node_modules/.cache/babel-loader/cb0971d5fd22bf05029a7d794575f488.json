{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/QuestionsForm.js\";\nimport React, { Component } from \"react\";\nimport { Jumbotron, Container, Image, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\nimport styles from \"../CSS/QuestionsForm.module.css\";\nimport questionsForm from \"../assets/questionsForm.png\";\nconst FORMSPREE_URL = \"http://localhost:8080/form\";\nexport default class QuestionsForm extends Component {\n  constructor(props) {\n    super(props); // state\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const formData = new FormData(event.target);\n      const doc = {};\n\n      for (let [key, val] of formData) {\n        doc[key] = val;\n      }\n\n      this.submitButtonRef.current.innerText = \"Sending...\";\n\n      try {\n        const resp__raw = await fetch(FORMSPREE_URL, {\n          origin: \"*\",\n          method: \"POST\",\n          body: JSON.stringify(doc),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n            \"Access-Control-Allow-Credentials\": \"true\"\n          }\n        });\n        console.log(resp__raw); //{\"name\":\"teste\",\"email\":\"sadasda@gmail.com\",\"question\":\"ola\"}\n        //https://formspree.io/f/xgervlek\n\n        if (!resp__raw.ok) {\n          this.setState({\n            error: \"Something went wrong while submitting data\",\n            hasSubmissionSucceed: false\n          });\n        }\n\n        this.setState({\n          error: null,\n          hasSubmissionSucceed: true\n        });\n        this.formRef.current.reset();\n      } catch (err) {\n        console.log(err.message);\n        this.setState({\n          error: err.message,\n          hasSubmissionSucceed: false\n        });\n      } finally {\n        this.submitButtonRef.current.innerText = \"Send Message\";\n      }\n    };\n\n    this.state = {\n      error: null,\n      hasSubmissionSucceed: false\n    }; // refs\n\n    this.submitButtonRef = React.createRef();\n    this.formRef = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Jumbotron, {\n      id: \"contact\",\n      style: {\n        paddingTop: \"0px\",\n        backgroundColor: \"#ffffff\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.Heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Need help with \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#008dc8\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }\n    }, \"Something\"), \"?\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      style: {\n        margin: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"auto\",\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: questionsForm,\n      alt: \"QuestionsForm\",\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      lg: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, this.state.hasSubmissionSucceed && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Successfully Submitted Your Email\"), this.state.error && /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      ref: this.formRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      defaultValue: \"\",\n      placeholder: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      name: \"email\",\n      defaultValue: \"\",\n      placeholder: \"What's your email?\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"question\",\n      defaultValue: \"\",\n      placeholder: \"Your message...\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      ref: this.submitButtonRef,\n      className: styles.Button,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, \"Send Email\")))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/QuestionsForm.js"],"names":["React","Component","Jumbotron","Container","Image","Row","Col","Form","Button","Alert","styles","questionsForm","FORMSPREE_URL","QuestionsForm","constructor","props","handleSubmit","event","preventDefault","formData","FormData","target","doc","key","val","submitButtonRef","current","innerText","resp__raw","fetch","origin","method","body","JSON","stringify","headers","console","log","ok","setState","error","hasSubmissionSucceed","formRef","reset","err","message","state","createRef","render","paddingTop","backgroundColor","Heading","color","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  Image,\n  Row,\n  Col,\n  Form,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport styles from \"../CSS/QuestionsForm.module.css\";\nimport questionsForm from \"../assets/questionsForm.png\";\n\nconst FORMSPREE_URL = \"http://localhost:8080/form\";\n\nexport default class QuestionsForm extends Component {\n  constructor(props) {\n    super(props);\n\n    // state\n    this.state = {\n      error: null,\n      hasSubmissionSucceed: false,\n    };\n\n    // refs\n    this.submitButtonRef = React.createRef();\n    this.formRef = React.createRef();\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const doc = {};\n\n    for (let [key, val] of formData) {\n      doc[key] = val;\n    }\n\n    this.submitButtonRef.current.innerText = \"Sending...\";\n\n    try {\n      const resp__raw = await fetch(FORMSPREE_URL, {\n        origin: \"*\",\n        method: \"POST\",\n        body: JSON.stringify(doc),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n          \"Access-Control-Allow-Credentials\": \"true\",\n        },\n      });\n\n      console.log(resp__raw)\n\n      //{\"name\":\"teste\",\"email\":\"sadasda@gmail.com\",\"question\":\"ola\"}\n      //https://formspree.io/f/xgervlek\n\n      if (!resp__raw.ok) {\n        this.setState({\n          error: \"Something went wrong while submitting data\",\n          hasSubmissionSucceed: false,\n        });\n      }\n\n      this.setState({ error: null, hasSubmissionSucceed: true });\n      this.formRef.current.reset();\n    } catch (err) {\n      console.log(err.message);\n      this.setState({ error: err.message, hasSubmissionSucceed: false });\n    } finally {\n      this.submitButtonRef.current.innerText = \"Send Message\";\n    }\n  };\n\n  render() {\n    return (\n      <Jumbotron\n        id=\"contact\"\n        style={{ paddingTop: \"0px\", backgroundColor: \"#ffffff\" }}\n      >\n        <Container fluid=\"sm\">\n          <h1 className={styles.Heading}>\n            Need help with <span style={{ color: \"#008dc8\" }}>Something</span>?\n          </h1>\n          <Row\n            className=\"justify-content-md-center\"\n            style={{ margin: \"50px\"}}\n          >\n            <Col md={\"auto\"} lg={6}>\n              <Image src={questionsForm} alt=\"QuestionsForm\" fluid />\n            </Col>\n            <Col lg={5}>\n              {/* feedback messages */}\n              {this.state.hasSubmissionSucceed && (\n                <Alert variant=\"success\">\n                  Successfully Submitted Your Email\n                </Alert>\n              )}\n\n              {this.state.error && (\n                <Alert variant=\"danger\">{this.state.error}</Alert>\n              )}\n\n              <Form onSubmit={this.handleSubmit} ref={this.formRef}>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    defaultValue=\"\"\n                    placeholder=\"Name\"\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    defaultValue=\"\"\n                    placeholder=\"What's your email?\"\n                    required\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control\n                    as=\"textarea\"\n                    rows=\"3\"\n                    name=\"question\"\n                    defaultValue=\"\"\n                    placeholder=\"Your message...\"\n                    required\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Button\n                    ref={this.submitButtonRef}\n                    className={styles.Button}\n                    type=\"submit\"\n                  >\n                    Send Email\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}