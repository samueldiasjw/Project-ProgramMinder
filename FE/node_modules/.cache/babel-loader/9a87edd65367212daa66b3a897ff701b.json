{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Login.js\";\nimport React, { useState } from \"react\";\nimport { Jumbotron, Container, Image, Alert } from \"react-bootstrap\";\nimport styles from \"../CSS/Register.module.css\";\nimport code from \"../../commons/Assets/imagemLogo.png\";\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [hasSubmissionSucceed, setHasSubmissionSucceed] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      const resp__raw = await fetch(\"http://localhost:8080/api/auth/login\", {\n        origin: \"*\",\n        method: \"POST\",\n        body: JSON.stringify({\n          email: `${email}`,\n          password: `${password}`\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(resp__raw).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n\n      if (!resp__raw.ok) {\n        setError(true);\n        setHasSubmissionSucceed(false);\n        resp__raw.text().then(text => {\n          setErrorMessage(JSON.parse(text).message);\n        });\n      } else {\n        console.log(\"DEU CERTOOO GALERRRAAAA\");\n      }\n    } catch (err) {\n      console.log(\"Error in Login!\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    id: \"about\",\n    className: styles.Jumbotron,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Us,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Image, {\n    src: code,\n    alt: \"Logo\",\n    style: {\n      maxHeight: \"36px\",\n      alignSelf: \"center\",\n      marginLeft: \"10px\",\n      paddingBottom: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    required: \"required\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    required: \"required\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.buttonSubmit,\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Login.js"],"names":["React","useState","Jumbotron","Container","Image","Alert","styles","code","Login","email","setEmail","password","setPassword","hasSubmissionSucceed","setHasSubmissionSucceed","error","setError","errorMessage","setErrorMessage","handleSubmit","evt","preventDefault","resp__raw","fetch","origin","method","body","JSON","stringify","headers","console","log","then","response","json","data","ok","text","parse","message","err","card","heading","Us","maxHeight","alignSelf","marginLeft","paddingBottom","form","e","target","value","buttonSubmit","lineGrade"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Jumbotron, Container, Image, Alert } from \"react-bootstrap\";\nimport styles from \"../CSS/Register.module.css\";\nimport code from \"../../commons/Assets/imagemLogo.png\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [hasSubmissionSucceed, setHasSubmissionSucceed] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n\n  \n  const handleSubmit = async (evt) => {\n      evt.preventDefault();\n\n      try {\n        const resp__raw = await fetch(\"http://localhost:8080/api/auth/login\", {\n          origin: \"*\",\n          method: \"POST\",\n          body: JSON.stringify({\n            email: `${email}`,\n            password: `${password}`\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        console.log(resp__raw)\n\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data)\n        })\n\n        if(!resp__raw.ok){\n          setError(true)\n          setHasSubmissionSucceed(false)\n          resp__raw.text().then(text => {setErrorMessage(JSON.parse(text).message)})\n        } else{\n          console.log(\"DEU CERTOOO GALERRRAAAA\")\n        }\n      } catch (err) {\n        console.log(\"Error in Login!\")\n      }\n      \n  }\n\n\n  return (\n    <Jumbotron id=\"about\" className={styles.Jumbotron} fluid>\n      <Container>\n        <div className={styles.card}>\n          <h1 className={styles.heading}>\n            <span className={styles.Us}>Login</span>\n            <Image src={code} alt=\"Logo\" style={{ maxHeight: \"36px\", alignSelf: \"center\", marginLeft: \"10px\", paddingBottom: \"4px\"  }} />\n          </h1>\n\n          {error && (\n                <Alert variant=\"danger\">{errorMessage}</Alert>\n              )}\n\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <label>Email:</label>\n              <input\n                type=\"email\"\n                value={email}\n                required=\"required\"\n                onChange={e => setEmail(e.target.value)}\n              />\n\n            <label>Password:</label>\n              <input\n                type=\"password\"\n                required=\"required\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n\n            <input className={styles.buttonSubmit} type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Container>\n      <div className={styles.lineGrade} ></div>\n    </Jumbotron>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}