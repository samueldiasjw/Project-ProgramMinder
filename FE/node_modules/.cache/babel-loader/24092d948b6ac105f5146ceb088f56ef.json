{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Register.js\";\nimport React, { useState } from \"react\";\nimport { Jumbotron, Container, Image } from \"react-bootstrap\";\nimport styles from \"../CSS/Register.module.css\";\nimport code from \"../../commons/Assets/imagemLogo.png\";\nexport default function AboutUs({\n  id\n}) {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatarName, setAvatarName] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    try {\n      fetch(\"http://localhost:8080/users\", {\n        origin: \"*\",\n        method: \"POST\",\n        body: JSON.stringify({\n          name: `${name}`,\n          password: `${password}`,\n          email: `${email}`,\n          avatarName: `${avatarName}`,\n          photo: `${photo}`,\n          description: `${description}`\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      alert(\"Submited\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    id: \"about\",\n    className: styles.Jumbotron,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Us,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Image, {\n    src: code,\n    alt: \"Logo\",\n    style: {\n      maxHeight: \"36px\",\n      alignSelf: \"center\",\n      marginLeft: \"10px\",\n      paddingBottom: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Avatar Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: avatarName,\n    onChange: e => setAvatarName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Photo:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: photo,\n    onChange: e => setPhoto(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.buttonSubmit,\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Register.js"],"names":["React","useState","Jumbotron","Container","Image","styles","code","AboutUs","id","name","setName","password","setPassword","email","setEmail","avatarName","setAvatarName","photo","setPhoto","description","setDescription","handleSubmit","evt","preventDefault","fetch","origin","method","body","JSON","stringify","headers","alert","err","console","log","message","card","heading","Us","maxHeight","alignSelf","marginLeft","paddingBottom","form","e","target","value","buttonSubmit","lineGrade"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Jumbotron, Container, Image } from \"react-bootstrap\";\nimport styles from \"../CSS/Register.module.css\";\nimport code from \"../../commons/Assets/imagemLogo.png\";\n\nexport default function AboutUs({ id }) {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatarName, setAvatarName] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  \n  const handleSubmit = (evt) => {\n      evt.preventDefault();\n\n      try {\n        fetch(\"http://localhost:8080/users\", {\n          origin: \"*\",\n          method: \"POST\",\n          body: JSON.stringify({\n            name: `${name}`,\n            password: `${password}`,\n            email: `${email}`,\n            avatarName: `${avatarName}`,\n            photo: `${photo}`,\n            description: `${description}`\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        alert(\"Submited\");\n      } catch (err) {\n        console.log(err.message);\n      } \n  }\n\n\n  return (\n    <Jumbotron id=\"about\" className={styles.Jumbotron} fluid>\n      <Container>\n        <div className={styles.card}>\n          <h1 className={styles.heading}>\n            <span className={styles.Us}>Register</span>\n            <Image src={code} alt=\"Logo\" style={{ maxHeight: \"36px\", alignSelf: \"center\", marginLeft: \"10px\", paddingBottom: \"4px\"  }} />\n          </h1>\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <label>Username:</label>\n              <input\n                type=\"text\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n\n            <label>Password:</label>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n\n            <label>Email:</label>\n              <input\n                type=\"text\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n\n            <label>\n              Avatar Name:\n              </label>\n              <input\n                type=\"text\"\n                value={avatarName}\n                onChange={e => setAvatarName(e.target.value)}\n              />\n\n            <label>Photo:</label>\n            <input\n                type=\"text\"\n                value={photo}\n                onChange={e => setPhoto(e.target.value)}\n            />\n\n            <label>Description:</label>\n            <input\n                type=\"text\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n            />\n\n            <input className={styles.buttonSubmit} type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Container>\n      <div className={styles.lineGrade} ></div>\n    </Jumbotron>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}