{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Threads.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Jumbotron, Container, Image } from \"react-bootstrap\";\nimport styles from \"../CSS/Category.module.css\";\nimport NotAccess from \"./NotAccess\";\nexport default function Threads() {\n  const {\n    id\n  } = useParams();\n  const [category, setCategory] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n  useEffect(() => {\n    fetch(\"http://localhost:8080/categorys/\", requestOptions).then(response => {\n      return response.json();\n    }).then(data => {\n      document.cookie.split(\"token=\")[1] ? setCategory(data[id - 1].name) : setCategory(\"\");\n    });\n    fetch(`http://localhost:8080/threads/${id}`, requestOptions).then(response => {\n      return response.json();\n    }).then(data => {\n      setPosts(data || []);\n    });\n    fetch(`http://localhost:8080/users/getusers/categoryid/${id}`, requestOptions).then(response => {\n      return response.json();\n    }).then(data => {\n      setUsers(data || []);\n    });\n  }, [id]);\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    id: \"about\",\n    className: styles.Jumbotron,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, document.cookie.split(\"token=\")[1] ? /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Us,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Threads \", category), /*#__PURE__*/React.createElement(\"a\", {\n    href: `/create/thread/${id}`,\n    className: styles.createButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"+ Create Post\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.links,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, posts.map((post, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: post.threadId,\n      className: styles.linkWithImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: users[index] !== undefined ? users[index].photo : \"\",\n      alt: \"Account Image\",\n      style: {\n        maxHeight: \"36px\",\n        alignSelf: \"center\",\n        marginLeft: \"10px\",\n        paddingBottom: \"4px\",\n        borderRadius: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      className: styles.categoryLink,\n      to: `/post/${post.threadId}`,\n      key: post.threadId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, post.title, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 120\n      }\n    }, \"By: \", users[index] !== undefined ? users[index].avatarName : \"\")));\n  })))) : /*#__PURE__*/React.createElement(NotAccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Threads.js"],"names":["React","useEffect","useState","Link","useParams","Jumbotron","Container","Image","styles","NotAccess","Threads","id","category","setCategory","posts","setPosts","users","setUsers","myHeaders","Headers","append","document","cookie","split","requestOptions","method","headers","redirect","fetch","then","response","json","data","name","card","heading","Us","createButton","links","map","post","index","threadId","linkWithImage","undefined","photo","maxHeight","alignSelf","marginLeft","paddingBottom","borderRadius","categoryLink","title","avatarName","lineGrade"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Jumbotron, Container, Image} from \"react-bootstrap\";\nimport styles from \"../CSS/Category.module.css\";\n\nimport NotAccess from \"./NotAccess\";\n\nexport default function Threads() {\n  const { id } = useParams();\n  const [category, setCategory] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n  \n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n\n  useEffect( () => {\n    fetch(\"http://localhost:8080/categorys/\", requestOptions)\n    .then((response) => {\n      return response.json()\n    })\n    .then((data) => {\n      document.cookie.split(\"token=\")[1] ? setCategory(data[id - 1].name) : setCategory(\"\");\n    })\n\n    fetch(`http://localhost:8080/threads/${id}`, requestOptions)\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        setPosts(data || [])\n      })\n\n    fetch(`http://localhost:8080/users/getusers/categoryid/${id}`, requestOptions)\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        setUsers(data || [])\n      })\n  }, [id] )\n\n\n  return (\n    <Jumbotron id=\"about\" className={styles.Jumbotron} fluid>\n      {document.cookie.split(\"token=\")[1] ? \n      <Container>\n        <div className={styles.card}>\n          <h1 className={styles.heading}>\n            <span className={styles.Us}>Threads {category}</span>\n            <a href = {`/create/thread/${id}`} className = {styles.createButton}>\n                + Create Post\n            </a>\n          </h1>\n          <div className={styles.links}>\n            {posts.map((post, index) =>{\n              return(\n                <div key={post.threadId} className={styles.linkWithImage}>\n                  <Image src={users[index] !== undefined ? users[index].photo : \"\"} alt=\"Account Image\" style={{ maxHeight: \"36px\", alignSelf: \"center\", marginLeft: \"10px\", paddingBottom: \"4px\", borderRadius: \"50%\"  }}></Image>\n                  <Link className={styles.categoryLink} to={`/post/${post.threadId}`} key={post.threadId}>{post.title} <p>By: {users[index] !== undefined ? users[index].avatarName : \"\"}</p></Link>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </Container>\n        : <NotAccess/>}\n      <div className={styles.lineGrade} ></div>\n    </Jumbotron>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}