{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/CreateThread/CreateThread.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Jumbotron, Container, Image } from \"react-bootstrap\";\nimport styles from \"../Post/Posts.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport NotAccess from \"../NotAccess/NotAccess\";\nexport default function CreateThread() {\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const userResquestingAccount = useSelector(store => store.users);\n\n  function sendThread(e) {\n    e.preventDefault();\n\n    if (title !== \"\" && text !== \"\") {\n      var postHeader = new Headers();\n      postHeader.append(\"Content-Type\", \"application/json\");\n      postHeader.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n      var raw = JSON.stringify({\n        \"title\": title,\n        \"post\": text,\n        \"userId\": userResquestingAccount.userId,\n        \"categoryId\": id\n      });\n      var postRequestOptions = {\n        method: 'POST',\n        headers: postHeader,\n        body: raw,\n        redirect: 'follow'\n      };\n      fetch(\"http://localhost:8080/threads\", postRequestOptions).then(response => response.json()).then(result => {\n        history.push(`/post/${result.threadId}`);\n      }).catch(error => console.log('error', error));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    id: \"about\",\n    className: styles.Jumbotron,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, document.cookie.split(\"token=\")[1] ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Us,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Create Thread\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.richtext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    required: \"required\",\n    value: title,\n    style: {\n      backgroundColor: \"#3b3f48\",\n      border: \"1px solid #556177\",\n      borderRadius: \"4px\",\n      width: \"100%\",\n      marginBottom: \"20px\",\n      outline: \"none\",\n      color: \"white\"\n    },\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Write your reply...</p>\",\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setText(data);\n    },\n    onFocus: (event, editor) => {\n      const data = editor.getData();\n\n      if (data === \"<p>Write your reply...</p>\") {\n        editor.setData(\"\");\n        setText(\"\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: styles.createButton,\n    onClick: sendThread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"+ Post\"))) : /*#__PURE__*/React.createElement(NotAccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/CreateThread/CreateThread.jsx"],"names":["React","useEffect","useState","useParams","useHistory","Jumbotron","Container","Image","styles","useSelector","CKEditor","ClassicEditor","NotAccess","CreateThread","id","history","text","setText","title","setTitle","userResquestingAccount","store","users","sendThread","e","preventDefault","postHeader","Headers","append","document","cookie","split","raw","JSON","stringify","userId","postRequestOptions","method","headers","body","redirect","fetch","then","response","json","result","push","threadId","catch","error","console","log","card","heading","Us","richtext","backgroundColor","border","borderRadius","width","marginBottom","outline","color","target","value","event","editor","data","getData","setData","createButton","lineGrade"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Jumbotron, Container, Image} from \"react-bootstrap\";\nimport styles from \"../Post/Posts.module.css\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport NotAccess from \"../NotAccess/NotAccess\"\n\n\nexport default function CreateThread() {\n  const { id } = useParams();\n  const history = useHistory();\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  const userResquestingAccount = useSelector(store => store.users);\n\n  function sendThread(e) {\n    e.preventDefault();\n\n    if(title !== \"\" && text !==\"\"){\n      var postHeader = new Headers();\n      postHeader.append(\"Content-Type\", \"application/json\");\n      postHeader.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n      \n      var raw = JSON.stringify({\"title\": title,\"post\": text,\"userId\": userResquestingAccount.userId,\"categoryId\":id});\n      \n      var postRequestOptions = {\n        method: 'POST',\n        headers: postHeader,\n        body: raw,\n        redirect: 'follow'\n      };\n      \n      fetch(\"http://localhost:8080/threads\", postRequestOptions)\n        .then(response => response.json())\n        .then(result => {\n          history.push(`/post/${result.threadId}`)\n        })\n        .catch(error => console.log('error', error));\n    }\n  }\n\n  return (\n    <Jumbotron id=\"about\" className={styles.Jumbotron} fluid>\n      <Container>\n        {document.cookie.split(\"token=\")[1] ?\n          <div className={styles.card}>\n          <h1 className={styles.heading}>\n            <span className={styles.Us}>Create Thread</span>\n          </h1>\n            <div className = {styles.richtext}>\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                required=\"required\"\n                value={title}\n                style={{ backgroundColor: \"#3b3f48\", border: \"1px solid #556177\", borderRadius: \"4px\", width: \"100%\", marginBottom: \"20px\", outline: \"none\", color: \"white\" }}\n                onChange={e => setTitle(e.target.value)}\n              />\n              <CKEditor\n                      editor={ ClassicEditor }\n                      data=\"<p>Write your reply...</p>\"\n                      onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n\n                        setText(data)\n                      } }\n                      onFocus={ ( event, editor ) => {\n                          const data = editor.getData();\n\n                          if(data === \"<p>Write your reply...</p>\"){\n                            editor.setData(\"\");\n                            setText(\"\")\n                          }\n                      } }\n              />\n              <a href = \"#\" className = {styles.createButton} onClick={sendThread}>\n                + Post\n              </a>\n            </div>\n        </div> : <NotAccess/>\n        }\n        \n      </Container>\n      <div className={styles.lineGrade} ></div>\n    </Jumbotron>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}