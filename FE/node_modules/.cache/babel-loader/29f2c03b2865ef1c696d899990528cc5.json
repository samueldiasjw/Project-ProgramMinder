{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Account/Account.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Jumbotron, Container, Image } from \"react-bootstrap\";\nimport styles from \"./Account.module.css\";\nimport parse from \"html-react-parser\";\nimport { useSelector } from \"react-redux\";\nimport NotAccess from \"../NotAccess/NotAccess\";\nexport default function Account() {\n  let {\n    id\n  } = useParams();\n  const [user, setUser] = useState([]);\n  const [threads, setThreads] = useState([]);\n  const userResquestingAccount = useSelector(store => store.users);\n\n  if (id === \"myaccount\") {\n    id = userResquestingAccount.userId;\n  }\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n  useEffect(() => {\n    fetch(`http://localhost:8080/users/getuser/${id}`, requestOptions).then(response => {\n      return response.json();\n    }).then(data => {\n      setUser(data || []);\n    });\n    fetch(`http://localhost:8080/threads/userwithid/${id}`, requestOptions).then(response => {\n      return response.json();\n    }).then(data => {\n      setThreads(data || []);\n    });\n  }, [id]);\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    id: \"about\",\n    className: styles.Jumbotron,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, document.cookie.split(\"token=\")[1] ? /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Us,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Account\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.accountidentifiers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: user.id,\n    className: styles.linkWithImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.accountImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: user.photo,\n    alt: \"Logo\",\n    style: {\n      maxHeight: \"120px\",\n      maxWidth: \"120px\",\n      alignSelf: \"center\",\n      borderRadius: \"50%\",\n      border: \"2px solid white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.identifiersText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.emailAndAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"Email - \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 56\n    }\n  }, user.email)), /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"Avatar Name - \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 62\n    }\n  }, user.avatarName))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Description - \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 60\n    }\n  }, user.description))))), threads.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.allThreadsByUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Us,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"User Threads\")), threads.map(thread => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.accountThreads,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: thread.threadId,\n      className: styles.linkWithImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: styles.threadLink,\n      to: `/post/${thread.threadId}`,\n      key: thread.threadId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, thread.title, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 130\n      }\n    }, parse(thread.post)))));\n  })) : console.log(\"Without Threads\"))) : /*#__PURE__*/React.createElement(NotAccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Account/Account.jsx"],"names":["React","useEffect","useState","useParams","Link","Jumbotron","Container","Image","styles","parse","useSelector","NotAccess","Account","id","user","setUser","threads","setThreads","userResquestingAccount","store","users","userId","myHeaders","Headers","append","document","cookie","split","requestOptions","method","headers","redirect","fetch","then","response","json","data","card","heading","Us","accountidentifiers","linkWithImage","accountImage","photo","maxHeight","maxWidth","alignSelf","borderRadius","border","identifiersText","emailAndAvatar","title","email","avatarName","description","length","allThreadsByUser","map","thread","accountThreads","threadId","threadLink","post","console","log","lineGrade"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Jumbotron, Container, Image} from \"react-bootstrap\";\nimport styles from \"./Account.module.css\";\nimport parse from \"html-react-parser\";\n\nimport { useSelector } from \"react-redux\";\n\nimport NotAccess from \"../NotAccess/NotAccess\"\n\n\nexport default function Account () {\n  let { id } = useParams();\n  const [user, setUser] = useState([]);\n  const [threads, setThreads] = useState([]);\n\n  const userResquestingAccount = useSelector(store => store.users);\n\n  if (id === \"myaccount\"){\n    id = userResquestingAccount.userId\n  }\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n  \n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  useEffect( () => {\n    fetch(`http://localhost:8080/users/getuser/${id}`, requestOptions)\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        setUser(data || [])\n      })\n\n    fetch(`http://localhost:8080/threads/userwithid/${id}`, requestOptions)\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        setThreads(data || [])\n      })\n  }, [id])\n\n  return (\n    <Jumbotron id=\"about\" className={styles.Jumbotron} fluid>\n      {document.cookie.split(\"token=\")[1] ? \n      <Container>\n        <div className={styles.card}>\n          <h1 className={styles.heading}>\n            <span className={styles.Us}>Account</span>\n          </h1>\n          <div className={styles.accountidentifiers}>\n            <div key={user.id} className={styles.linkWithImage}>\n              <div className={styles.accountImage}>\n                <Image src={user.photo} alt=\"Logo\" style={{ maxHeight: \"120px\", maxWidth: \"120px\" , alignSelf: \"center\", borderRadius: \"50%\", border: \"2px solid white\"  }}></Image>\n              </div>\n              <div className={styles.identifiersText}>\n                <div className={styles.emailAndAvatar}>\n                  <h3 className={styles.title}>Email - <p>{user.email}</p></h3>\n                  <h3 className={styles.title}>Avatar Name - <p>{user.avatarName}</p></h3>\n                </div>\n                <h3 className={styles.title}>Description - <p>{user.description}</p></h3>\n              </div>\n            </div>\n          </div>\n          {threads.length > 0 ? \n            <div className={styles.allThreadsByUser}>\n              <h1 className={styles.heading}>\n                <span className={styles.Us}>User Threads</span>\n              </h1>\n                {threads.map((thread) =>{\n                  return(\n                    <div className={styles.accountThreads}>\n                      <div key={thread.threadId} className={styles.linkWithImage}>\n                        <Link className={styles.threadLink} to={`/post/${thread.threadId}`} key={thread.threadId}>{thread.title} <p>{parse(thread.post)}</p></Link>\n                      </div>\n                    </div>\n                  )\n                })}\n            </div>\n          : console.log(\"Without Threads\")}\n        </div>\n      </Container>\n        : <NotAccess/> }\n      <div className={styles.lineGrade} ></div>\n    </Jumbotron>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}