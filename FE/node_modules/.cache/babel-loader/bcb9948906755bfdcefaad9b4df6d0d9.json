{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Login.js\";\nimport React, { useState } from \"react\";\nimport { Jumbotron, Container, Image, Alert } from \"react-bootstrap\";\nimport styles from \"../CSS/Register.module.css\";\nimport code from \"../../commons/Assets/imagemLogo.png\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { addLoggedDataPerson } from \"../../actions/products\";\nexport default function Login() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  if (document.cookie.split(\"token=\")[1]) {\n    history.push(\"/login/categorys\");\n  }\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (email && password) {\n      fetch(\"http://localhost:8080/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      }).then(response => {\n        response.headers.forEach(value => {\n          console.log(value);\n        });\n\n        if (response.status !== 200) {\n          setError(true);\n          setErrorMessage(\"Wrong Credentials!\");\n        } else {\n          setError(false);\n          return response.json();\n        }\n      }).then(data => {\n        dispatch(addLoggedDataPerson(data.principalDto));\n        document.cookie = \"token=Bearer \" + data.token;\n        history.push(\"/login/categorys\");\n      }).catch(() => {\n        setError(true);\n        setErrorMessage(\"Something Went Wrong!\");\n        console.error(\"Something went wrong on your request\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    id: \"about\",\n    className: styles.Jumbotron,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Us,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Image, {\n    src: code,\n    alt: \"Logo\",\n    style: {\n      maxHeight: \"36px\",\n      alignSelf: \"center\",\n      marginLeft: \"10px\",\n      paddingBottom: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    required: \"required\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    required: \"required\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.buttonSubmit,\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Login.js"],"names":["React","useState","Jumbotron","Container","Image","Alert","styles","code","useHistory","useDispatch","addLoggedDataPerson","Login","dispatch","history","email","setEmail","password","setPassword","errorMessage","setErrorMessage","error","setError","document","cookie","split","push","handleSubmit","evt","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","forEach","value","console","log","status","json","data","principalDto","token","catch","card","heading","Us","maxHeight","alignSelf","marginLeft","paddingBottom","form","e","target","buttonSubmit","lineGrade"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,KAA/B,EAAsCC,KAAtC,QAAmD,iBAAnD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,wBAApC;AAGA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,KAAD,CAAlC;;AAEA,MAAIqB,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,QAAtB,EAAgC,CAAhC,CAAJ,EAAuC;AACrCX,IAAAA,OAAO,CAACY,IAAR,CAAa,kBAAb;AACD;;AAED,QAAMC,YAAY,GAAG,MAAOC,GAAP,IAAe;AAChCA,IAAAA,GAAG,CAACC,cAAJ;;AAEA,QAAId,KAAK,IAAIE,QAAb,EAAuB;AACrBa,MAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC5CC,QAAAA,MAAM,EAAE,MADoC;AAE5CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFmC;AAK5CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBpB,UAAAA,KADmB;AAEnBE,UAAAA;AAFmB,SAAf;AALsC,OAAzC,CAAL,CASGmB,IATH,CASSC,QAAD,IAAc;AAClBA,QAAAA,QAAQ,CAACL,OAAT,CAAiBM,OAAjB,CAAyBC,KAAK,IAAI;AAACC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,SAAtD;;AACA,YAAIF,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AAC3BpB,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,UAAAA,eAAe,CAAC,oBAAD,CAAf;AACD,SAHD,MAGO;AACLE,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,iBAAOe,QAAQ,CAACM,IAAT,EAAP;AACD;AACF,OAlBH,EAmBGP,IAnBH,CAmBSQ,IAAD,IAAU;AACd/B,QAAAA,QAAQ,CAACF,mBAAmB,CAACiC,IAAI,CAACC,YAAN,CAApB,CAAR;AACAtB,QAAAA,QAAQ,CAACC,MAAT,GAAkB,kBAAkBoB,IAAI,CAACE,KAAzC;AACAhC,QAAAA,OAAO,CAACY,IAAR,CAAa,kBAAb;AACD,OAvBH,EAwBGqB,KAxBH,CAwBS,MAAM;AACXzB,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,QAAAA,eAAe,CAAC,uBAAD,CAAf;AACAoB,QAAAA,OAAO,CAACnB,KAAR,CAAc,sCAAd;AACD,OA5BH;AA6BD;AAEJ,GAnCD;;AAsCA,sBACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,OAAd;AAAsB,IAAA,SAAS,EAAEd,MAAM,CAACJ,SAAxC;AAAmD,IAAA,KAAK,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEI,MAAM,CAACyC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEzC,MAAM,CAAC0C,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAE1C,MAAM,CAAC2C,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE1C,IAAZ;AAAkB,IAAA,GAAG,EAAC,MAAtB;AAA6B,IAAA,KAAK,EAAE;AAAE2C,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,SAAS,EAAE,QAAhC;AAA0CC,MAAAA,UAAU,EAAE,MAAtD;AAA8DC,MAAAA,aAAa,EAAE;AAA7E,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAMGjC,KAAK,iBACA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,YAAzB,CAPR,eAUE;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAA8B,IAAA,SAAS,EAAEpB,MAAM,CAACgD,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAExC,KAFT;AAGE,IAAA,QAAQ,EAAC,UAHX;AAIE,IAAA,QAAQ,EAAEyC,CAAC,IAAIxC,QAAQ,CAACwC,CAAC,CAACC,MAAF,CAASlB,KAAV,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,eAUI;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,QAAQ,EAAC,UAFX;AAGE,IAAA,KAAK,EAAEtB,QAHT;AAIE,IAAA,QAAQ,EAAEuC,CAAC,IAAItC,WAAW,CAACsC,CAAC,CAACC,MAAF,CAASlB,KAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAiBE;AAAO,IAAA,SAAS,EAAEhC,MAAM,CAACmD,YAAzB;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAqD,IAAA,KAAK,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CAVF,CADF,CADF,eAiCE;AAAK,IAAA,SAAS,EAAEnD,MAAM,CAACoD,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,CADF;AAqCD","sourcesContent":["import React, { useState } from \"react\";\nimport { Jumbotron, Container, Image, Alert } from \"react-bootstrap\";\nimport styles from \"../CSS/Register.module.css\";\nimport code from \"../../commons/Assets/imagemLogo.png\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addLoggedDataPerson } from \"../../actions/products\"\n\n\nexport default function Login() {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  if (document.cookie.split(\"token=\")[1]){\n    history.push(\"/login/categorys\")\n  }\n\n  const handleSubmit = async (evt) => {\n      evt.preventDefault();\n\n      if (email && password) {\n        fetch(\"http://localhost:8080/api/auth/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email,\n            password\n          }),\n        }).then((response) => {\n            response.headers.forEach(value => {console.log(value)})\n            if (response.status !== 200) {\n              setError(true)\n              setErrorMessage(\"Wrong Credentials!\")\n            } else {\n              setError(false)\n              return response.json();\n            }\n          })\n          .then((data) => {\n            dispatch(addLoggedDataPerson(data.principalDto));\n            document.cookie = \"token=Bearer \" + data.token;\n            history.push(\"/login/categorys\");\n          })\n          .catch(() => {\n            setError(true)\n            setErrorMessage(\"Something Went Wrong!\")\n            console.error(\"Something went wrong on your request\");\n          });\n      }\n      \n  }\n\n\n  return (\n    <Jumbotron id=\"about\" className={styles.Jumbotron} fluid>\n      <Container>\n        <div className={styles.card}>\n          <h1 className={styles.heading}>\n            <span className={styles.Us}>Login</span>\n            <Image src={code} alt=\"Logo\" style={{ maxHeight: \"36px\", alignSelf: \"center\", marginLeft: \"10px\", paddingBottom: \"4px\"  }} />\n          </h1>\n\n          {error && (\n                <Alert variant=\"danger\">{errorMessage}</Alert>\n              )}\n\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <label>Email:</label>\n              <input\n                type=\"email\"\n                value={email}\n                required=\"required\"\n                onChange={e => setEmail(e.target.value)}\n              />\n\n            <label>Password:</label>\n              <input\n                type=\"password\"\n                required=\"required\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n\n            <input className={styles.buttonSubmit} type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </Container>\n      <div className={styles.lineGrade} ></div>\n    </Jumbotron>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}