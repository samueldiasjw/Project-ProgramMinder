{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Posts.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Jumbotron, Container, Image } from \"react-bootstrap\";\nimport styles from \"../CSS/Posts.module.css\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport parse from \"html-react-parser\";\nimport NotAccess from \"./NotAccess\";\nexport default function Posts() {\n  const {\n    id\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [thread, setThread] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [editorDeTexto, setEditorDeTexto] = useState(\"\");\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n  useEffect(() => {\n    fetch(`http://localhost:8080/posts/${id}`, requestOptions).then(response => {\n      return response.json();\n    }).then(data => {\n      setPosts(data || []);\n    }).catch(error => {\n      console.log(\"ERRRORRR\");\n    });\n    fetch(`http://localhost:8080/threads/getthread/${id}`, requestOptions).then(response => {\n      return response.json();\n    }).then(data => {\n      setThread(data || []);\n    });\n    fetch(`http://localhost:8080/users/${id}`, requestOptions).then(response => {\n      return response.json();\n    }).then(data => {\n      setUsers(data || []);\n    });\n  }, [id]);\n\n  function sendPost(e) {\n    e.preventDefault();\n    var postHeader = new Headers();\n    postHeader.append(\"Content-Type\", \"application/json\");\n    postHeader.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n    var raw = JSON.stringify({\n      \"post\": text,\n      \"userId\": 1,\n      \"threadId\": id\n    });\n    var postRequestOptions = {\n      method: 'POST',\n      headers: postHeader,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:8080/posts\", postRequestOptions).then(response => response.text()).then(result => {\n      console.log(result); //document.location.reload(true)\n\n      setTimeout(function () {\n        //Saves the current scroll position before reloading the page.\n        localStorage.setItem('scrollPos', window.pageYOffset || document.documentElement.scrollTop);\n        document.location.reload();\n      }, 3000);\n    }).catch(error => console.log('error', error));\n  }\n\n  function quote(myString) {\n    editorDeTexto.setData(\"<blockquote><p>\" + myString + \"</p></blockquote><p>&nbsp;</p>\");\n    setText(\"<blockquote><p>\" + myString + \"</p></blockquote><p>&nbsp;</p>\");\n  }\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    id: \"about\",\n    className: styles.Jumbotron,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, document.cookie.split(\"token=\")[1] ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    key: thread.threadId,\n    className: styles.Us,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, thread.title)), /*#__PURE__*/React.createElement(\"div\", {\n    key: thread.threadId,\n    className: styles.cardPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.userInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: users[0] !== undefined ? users[0].photo : \"\",\n    alt: \"Account Image\",\n    className: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), users[0] !== undefined ? /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.userInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 47\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Link, {\n    className: styles.link,\n    to: `/account/${users[0].userId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 79\n    }\n  }, users[0].avatarName), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 173\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.tagRole + ' ' + styles[users[0].role],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 179\n    }\n  }, users[0].role), \" \") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.postText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, parse(\"\" + thread.post))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#reply\",\n    className: styles.Reply,\n    onClick: () => quote(\"<b>\" + users[0].avatarName + \" say:</b><p>\" + thread.post + \"</p>\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"\\u201CReply\"))), posts.length > 0 ? posts.map((post, index) => {\n    {\n      index = index + 1;\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: post.postId,\n      className: styles.cardPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.userInformation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: users[index] !== undefined ? users[index].photo : \"\",\n      alt: \"Account Image\",\n      className: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }), users[index] !== undefined ? /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: styles.link,\n      to: `/account/${users[index].userId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 82\n      }\n    }, users[index].avatarName), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 184\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.tagRole + ' ' + styles[users[index].role],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 190\n      }\n    }, users[index].role), \" \") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.postText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, parse(post.post))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#reply\",\n      className: styles.Reply,\n      onClick: () => quote(\"<b>\" + users[index].avatarName + \" say:</b><p>\" + post.post + \"</p>\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"\\u201CReply\")));\n  }) : console.log(\"DONT HAVE MORE POSTS\"), /*#__PURE__*/React.createElement(\"a\", {\n    name: \"reply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.richtext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Write your reply...</p>\",\n    onReady: editor => {\n      console.log(editor.ui.view.toolbar);\n      setEditorDeTexto(editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setText(data);\n    },\n    onFocus: (event, editor) => {\n      const data = editor.getData();\n\n      if (data === \"<p>Write your reply...</p>\") {\n        editor.setData(\"\");\n        setText(\"\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: styles.createButton,\n    onClick: sendPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"+ Post Reply\"))) : /*#__PURE__*/React.createElement(NotAccess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Posts.js"],"names":["React","useEffect","useState","useParams","Link","Jumbotron","Container","Image","styles","CKEditor","ClassicEditor","parse","NotAccess","Posts","id","posts","setPosts","thread","setThread","users","setUsers","text","setText","editorDeTexto","setEditorDeTexto","myHeaders","Headers","append","document","cookie","split","requestOptions","method","headers","redirect","fetch","then","response","json","data","catch","error","console","log","sendPost","e","preventDefault","postHeader","raw","JSON","stringify","postRequestOptions","body","result","setTimeout","localStorage","setItem","window","pageYOffset","documentElement","scrollTop","location","reload","quote","myString","setData","card","heading","threadId","Us","title","cardPost","userInformation","undefined","photo","image","userInfo","link","userId","avatarName","tagRole","role","postText","post","Reply","length","map","index","postId","richtext","editor","ui","view","toolbar","event","getData","createButton","lineGrade"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { Jumbotron, Container, Image} from \"react-bootstrap\";\nimport styles from \"../CSS/Posts.module.css\";\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport parse from \"html-react-parser\";\n\nimport NotAccess from \"./NotAccess\"\n\n\nexport default function Posts() {\n  const { id } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [thread, setThread] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [text, setText] = useState(\"\");\n\n\n  const [editorDeTexto, setEditorDeTexto] = useState(\"\");\n\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n\n  useEffect( () => {\n    fetch(`http://localhost:8080/posts/${id}`, requestOptions)\n    .then((response) => {\n      return response.json()\n    })\n    .then((data) => {\n      setPosts(data || [])\n    }) \n    .catch ((error) =>{\n        console.log(\"ERRRORRR\")\n    })\n\n    fetch(`http://localhost:8080/threads/getthread/${id}`, requestOptions)\n        .then((response) => {\n          return response.json()\n        })\n        .then((data) => {\n          setThread(data || [])\n        })\n\n    fetch(`http://localhost:8080/users/${id}`, requestOptions)\n        .then((response) => {\n          return response.json()\n        })\n        .then((data) => {\n          setUsers(data || [])\n        })\n    \n  }, [id])\n\n  function sendPost(e) {\n    e.preventDefault();\n\n\n    var postHeader = new Headers();\n    postHeader.append(\"Content-Type\", \"application/json\");\n    postHeader.append(\"Authorization\", document.cookie.split(\"token=\")[1]);\n    \n    var raw = JSON.stringify({\"post\": text,\"userId\":1,\"threadId\":id});\n    \n    var postRequestOptions = {\n      method: 'POST',\n      headers: postHeader,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(\"http://localhost:8080/posts\", postRequestOptions)\n      .then(response => response.text())\n      .then(result => {\n        console.log(result)\n        //document.location.reload(true)\n        setTimeout(function(){\n          //Saves the current scroll position before reloading the page.\n          localStorage.setItem('scrollPos', window.pageYOffset || document.documentElement.scrollTop);\n          document.location.reload();\n        }, 3000);\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  function quote(myString){\n    editorDeTexto.setData(\"<blockquote><p>\" + myString + \"</p></blockquote><p>&nbsp;</p>\");\n    setText(\"<blockquote><p>\" + myString + \"</p></blockquote><p>&nbsp;</p>\");\n  }\n\n  return (\n    <Jumbotron id=\"about\" className={styles.Jumbotron} fluid>\n      <Container>\n        {document.cookie.split(\"token=\")[1] ?\n          <div className={styles.card}>\n          <h1 className={styles.heading}>\n            <span key={thread.threadId} className={styles.Us}>{thread.title}</span>\n          </h1>\n                <div key={thread.threadId} className={styles.cardPost}>\n                  <div className={styles.userInformation}>\n                    <Image src={users[0] !== undefined ? users[0].photo : \"\"} alt=\"Account Image\" className={styles.image}></Image>\n                    {users[0] !== undefined ? <p className={styles.userInfo}> <Link className={styles.link} to={`/account/${users[0].userId}`}>{users[0].avatarName}</Link> <br/> <span className={styles.tagRole + ' ' + styles[users[0].role]}>{users[0].role}</span> </p> : \"\"}\n                  </div>\n                  <div>\n                    <p className={styles.postText}>{parse(\"\" + thread.post)}</p>\n                  </div>\n                  <div>\n                    <a href = \"#reply\" className = {styles.Reply} onClick={() => quote(\"<b>\" + users[0].avatarName + \" say:</b><p>\" + thread.post + \"</p>\")}>\n                      &#8220;Reply\n                    </a>\n                  </div>\n                </div>\n\n            {posts.length > 0 ? posts.map((post, index) =>{\n              {index= index + 1}\n              return(\n                <div key={post.postId} className={styles.cardPost}>\n                  <div className={styles.userInformation}>\n                    <Image src={users[index] !== undefined ? users[index].photo : \"\"} alt=\"Account Image\" className={styles.image}></Image>\n                    {users[index] !== undefined ? <p className={styles.userInfo}><Link className={styles.link} to={`/account/${users[index].userId}`}>{users[index].avatarName}</Link> <br/> <span className={styles.tagRole + ' ' + styles[users[index].role]}>{users[index].role}</span> </p> : \"\"}\n                  </div>\n                  <div>\n                    <p className={styles.postText}>{parse(post.post)}</p>\n                  </div>\n                  <div>\n                    <a href = \"#reply\" className = {styles.Reply} onClick={() => quote(\"<b>\" + users[index].avatarName + \" say:</b><p>\" + post.post + \"</p>\")}>\n                      &#8220;Reply\n                    </a>\n                  </div>\n                </div>\n              )\n            }):console.log(\"DONT HAVE MORE POSTS\")\n            }\n\n            <a name=\"reply\"></a>\n\n            <div className = {styles.richtext}>\n              <CKEditor\n                      editor={ ClassicEditor }\n                      data=\"<p>Write your reply...</p>\"\n                      onReady={ editor => {\n                        console.log(editor.ui.view.toolbar);\n                        setEditorDeTexto(editor);\n                      }}\n                      onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n\n                        setText(data)\n                      } }\n                      onFocus={ ( event, editor ) => {\n                          const data = editor.getData();\n\n                          if(data === \"<p>Write your reply...</p>\"){\n                            editor.setData(\"\");\n                            setText(\"\")\n                          }\n                      } }\n              />\n              <a href = \"#\" className = {styles.createButton} onClick={sendPost}>\n                + Post Reply\n              </a>\n            </div>\n        </div> : <NotAccess/>\n        }\n        \n      </Container>\n      <div className={styles.lineGrade} ></div>\n    </Jumbotron>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}