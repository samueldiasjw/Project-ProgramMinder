{"ast":null,"code":"var _jsxFileName = \"/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Posts.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Jumbotron, Container, Image } from \"react-bootstrap\";\nimport styles from \"../CSS/Posts.module.css\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nexport default function Posts() {\n  const {\n    id\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [thread, setThread] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:8080/posts/${id}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setPosts(data || []);\n    }).catch(error => {\n      console.log(\"ERRRORRR\");\n    });\n    fetch(`http://localhost:8080/threads/${id}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setThread(data || []);\n    });\n    fetch(`http://localhost:8080/users/${id}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setUsers(data || []);\n    });\n  }, [id]);\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    id: \"about\",\n    className: styles.Jumbotron,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, thread.map(post => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: post.threadId,\n      className: styles.Us,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, post.title);\n  })), thread.map((post, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: post.threadId,\n      className: styles.cardPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.userInformation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: users[index] !== undefined ? users[index].photo : \"\",\n      alt: \"Account Image\",\n      className: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), users[index] !== undefined ? /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 51\n      }\n    }, users[index].avatarName, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 108\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.tagRole + ' ' + styles[users[index].role],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 114\n      }\n    }, users[index].role), \" \") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.postText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, post.post)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: styles.Reply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"\\u201CReply\")));\n  }), posts.length > 0 ? posts.map((post, index) => {\n    {\n      index = index + 1;\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: post.postId,\n      className: styles.cardPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.userInformation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: users[index] !== undefined ? users[index].photo : \"\",\n      alt: \"Account Image\",\n      className: styles.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), users[index] !== undefined ? /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 51\n      }\n    }, users[index].avatarName, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 108\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.tagRole + ' ' + styles[users[index].role],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 114\n      }\n    }, users[index].role), \" \") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.postText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, post.post)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: styles.Reply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"\\u201CReply\")));\n  }) : console.log(\"DONT HAVE MORE POSTS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.richtext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Write your reply...</p>\",\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n      setText(data);\n    },\n    onFocus: (event, editor) => {\n      const data = editor.getData();\n      editor.setData(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: styles.createButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"+ Post Reply\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.lineGrade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/samueldias/Desktop/MyProjectMindera/src/homepage/Components/Posts.js"],"names":["React","useEffect","useState","Link","useParams","Jumbotron","Container","Image","styles","CKEditor","ClassicEditor","Posts","id","posts","setPosts","thread","setThread","users","setUsers","text","setText","fetch","then","response","json","data","catch","error","console","log","card","heading","map","post","threadId","Us","title","index","cardPost","userInformation","undefined","photo","image","userInfo","avatarName","tagRole","role","postText","Reply","length","postId","richtext","event","editor","getData","setData","createButton","lineGrade"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Jumbotron, Container, Image} from \"react-bootstrap\";\nimport styles from \"../CSS/Posts.module.css\";\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nexport default function Posts() {\n  const { id } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [thread, setThread] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  useEffect( () => {\n    fetch(`http://localhost:8080/posts/${id}`)\n    .then((response) => {\n      return response.json()\n    })\n    .then((data) => {\n      setPosts(data || [])\n    }) \n    .catch ((error) =>{\n        console.log(\"ERRRORRR\")\n    })\n\n    fetch(`http://localhost:8080/threads/${id}`)\n        .then((response) => {\n          return response.json()\n        })\n        .then((data) => {\n          setThread(data || [])\n        })\n\n    fetch(`http://localhost:8080/users/${id}`)\n        .then((response) => {\n          return response.json()\n        })\n        .then((data) => {\n          setUsers(data || [])\n        })\n    \n  }, [id])\n\n  return (\n    <Jumbotron id=\"about\" className={styles.Jumbotron} fluid>\n      <Container>\n        <div className={styles.card}>\n          <h1 className={styles.heading}>\n            {thread.map((post) =>{\n                return(\n                  <span key={post.threadId} className={styles.Us}>{post.title}</span>\n                )\n            })}\n          </h1>\n            {thread.map((post, index) =>{\n              return(\n                <div key={post.threadId} className={styles.cardPost}>\n                  <div className={styles.userInformation}>\n                    <Image src={users[index] !== undefined ? users[index].photo : \"\"} alt=\"Account Image\" className={styles.image}></Image>\n                    {users[index] !== undefined ? <p className={styles.userInfo}>{users[index].avatarName} <br/> <span className={styles.tagRole + ' ' + styles[users[index].role]}>{users[index].role}</span> </p> : \"\"}\n                  </div>\n                  <div>\n                    <p className={styles.postText}>{post.post}</p>\n                  </div>\n                  <div>\n                    <a href = \"#\" className = {styles.Reply}>\n                      &#8220;Reply\n                    </a>\n                  </div>\n                </div>\n              )\n            })}\n\n            {posts.length > 0 ? posts.map((post, index) =>{\n              {index= index + 1}\n              return(\n                <div key={post.postId} className={styles.cardPost}>\n                  <div className={styles.userInformation}>\n                    <Image src={users[index] !== undefined ? users[index].photo : \"\"} alt=\"Account Image\" className={styles.image}></Image>\n                    {users[index] !== undefined ? <p className={styles.userInfo}>{users[index].avatarName} <br/> <span className={styles.tagRole + ' ' + styles[users[index].role]}>{users[index].role}</span> </p> : \"\"}\n                  </div>\n                  <div>\n                    <p className={styles.postText}>{post.post}</p>\n                  </div>\n                  <div>\n                    <a href = \"#\" className = {styles.Reply}>\n                      &#8220;Reply\n                    </a>\n                  </div>\n                </div>\n              )\n            }):console.log(\"DONT HAVE MORE POSTS\")\n            }\n\n            <div className = {styles.richtext}>\n              <CKEditor\n                      editor={ ClassicEditor }\n                      data=\"<p>Write your reply...</p>\"\n                      onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        console.log( { event, editor, data } );\n\n                        setText(data)\n                      } }\n                      onFocus={ ( event, editor ) => {\n                          const data = editor.getData();\n                          editor.setData(\"\");\n                      } }\n              />\n              <a href = \"#\" className = {styles.createButton}>\n                + Post Reply\n              </a>\n            </div>\n        </div>\n      </Container>\n      <div className={styles.lineGrade} ></div>\n    </Jumbotron>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}